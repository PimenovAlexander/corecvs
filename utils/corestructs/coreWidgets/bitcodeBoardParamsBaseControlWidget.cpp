/**
 * \file bitcodeBoardParamsBaseControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "bitcodeBoardParamsBaseControlWidget.h"
#include "ui_bitcodeBoardParamsBaseControlWidget.h"
#include <memory>
#include "visitors/qSettingsGetter.h"
#include "visitors/qSettingsSetter.h"


BitcodeBoardParamsBaseControlWidget::BitcodeBoardParamsBaseControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::BitcodeBoardParamsBaseControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->verticalCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->cellSizeSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->blackColorSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->whiteColorSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->identSizeSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->boardHeightSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->boardWidthSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->codeWidthSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->codeHeightSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->bitcodeIdentSizeSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->bitcodeConfidenceSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->bitcodeOrientationComboBox, SIGNAL(currentIndexChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->centerToZeroXSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->centerToZeroYSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
}

BitcodeBoardParamsBaseControlWidget::~BitcodeBoardParamsBaseControlWidget()
{

    delete mUi;
}

void BitcodeBoardParamsBaseControlWidget::loadParamWidget(WidgetLoader &loader)
{
    std::unique_ptr<BitcodeBoardParamsBase> params(createParameters());
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
}

void BitcodeBoardParamsBaseControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    saver.saveParameters(*std::unique_ptr<BitcodeBoardParamsBase>(createParameters()), rootPath);
}

void BitcodeBoardParamsBaseControlWidget::getParameters(BitcodeBoardParamsBase& params) const
{
    params = *std::unique_ptr<BitcodeBoardParamsBase>(createParameters());
}


BitcodeBoardParamsBase *BitcodeBoardParamsBaseControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    return new BitcodeBoardParamsBase(
          mUi->verticalCheckBox->isChecked()
        , mUi->cellSizeSpinBox->value()
        , mUi->blackColorSpinBox->value()
        , mUi->whiteColorSpinBox->value()
        , mUi->identSizeSpinBox->value()
        , mUi->boardHeightSpinBox->value()
        , mUi->boardWidthSpinBox->value()
        , mUi->codeWidthSpinBox->value()
        , mUi->codeHeightSpinBox->value()
        , mUi->bitcodeIdentSizeSpinBox->value()
        , mUi->bitcodeConfidenceSpinBox->value()
        , static_cast<BitcodeBoardOrientation::BitcodeBoardOrientation>(mUi->bitcodeOrientationComboBox->currentIndex())
        , mUi->centerToZeroXSpinBox->value()
        , mUi->centerToZeroYSpinBox->value()
    );
}

void BitcodeBoardParamsBaseControlWidget::setParameters(const BitcodeBoardParamsBase &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->verticalCheckBox->setChecked(input.vertical());
    mUi->cellSizeSpinBox->setValue(input.cellSize());
    mUi->blackColorSpinBox->setValue(input.blackColor());
    mUi->whiteColorSpinBox->setValue(input.whiteColor());
    mUi->identSizeSpinBox->setValue(input.identSize());
    mUi->boardHeightSpinBox->setValue(input.boardHeight());
    mUi->boardWidthSpinBox->setValue(input.boardWidth());
    mUi->codeWidthSpinBox->setValue(input.codeWidth());
    mUi->codeHeightSpinBox->setValue(input.codeHeight());
    mUi->bitcodeIdentSizeSpinBox->setValue(input.bitcodeIdentSize());
    mUi->bitcodeConfidenceSpinBox->setValue(input.bitcodeConfidence());
    mUi->bitcodeOrientationComboBox->setCurrentIndex(input.bitcodeOrientation());
    mUi->centerToZeroXSpinBox->setValue(input.centerToZeroX());
    mUi->centerToZeroYSpinBox->setValue(input.centerToZeroY());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void BitcodeBoardParamsBaseControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    BitcodeBoardParamsBase *inputCasted = static_cast<BitcodeBoardParamsBase *>(input);
    setParameters(*inputCasted);
}
